{"ast":null,"code":"var _jsxFileName = \"/Users/kishank/Documents/Razorpay-Payment-Gateway/razorpay-frontend/src/comps/PaymentStatus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { grabStatus } from \"../apiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentStatus = ({\n  match\n}) => {\n  _s();\n\n  const [values, setValues] = useState({\n    amount: \"\",\n    error: \"\"\n  });\n  const {\n    amount,\n    error\n  } = values;\n  useEffect(() => {\n    getPaymentStatus(match.params.paymentId);\n  }, []);\n\n  const getPaymentStatus = paymentId => {\n    grabStatus(paymentId).then(respsonse => {\n      if (respsonse.error) {\n        setValues({ ...values,\n          error: respsonse.error,\n          amount: \"\"\n        });\n      } else {\n        setValues({ ...values,\n          error: \"\",\n          amount: respsonse.amount\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), amount > 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"green\"\n      },\n      children: [\"Your order of rs \", amount / 100, \" is successfull\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), !error && !amount && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentStatus, \"8QLXT+5zy6u14Hy3F7a9qMFHUGc=\");\n\n_c = PaymentStatus;\nexport default PaymentStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentStatus\");","map":{"version":3,"sources":["/Users/kishank/Documents/Razorpay-Payment-Gateway/razorpay-frontend/src/comps/PaymentStatus.js"],"names":["React","useEffect","useState","grabStatus","PaymentStatus","match","values","setValues","amount","error","getPaymentStatus","params","paymentId","then","respsonse","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,IAAAA,MAAM,EAAE,EAD2B;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAApC;AAKA,QAAM;AAAED,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBH,MAA1B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,CAACL,KAAK,CAACM,MAAN,CAAaC,SAAd,CAAhB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMF,gBAAgB,GAAIE,SAAD,IAAe;AACtCT,IAAAA,UAAU,CAACS,SAAD,CAAV,CAAsBC,IAAtB,CAA4BC,SAAD,IAAe;AACxC,UAAIA,SAAS,CAACL,KAAd,EAAqB;AACnBF,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaG,UAAAA,KAAK,EAAEK,SAAS,CAACL,KAA9B;AAAqCD,UAAAA,MAAM,EAAE;AAA7C,SAAD,CAAT;AACD,OAFD,MAEO;AACLD,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaG,UAAAA,KAAK,EAAE,EAApB;AAAwBD,UAAAA,MAAM,EAAEM,SAAS,CAACN;AAA1C,SAAD,CAAT;AACD;AACF,KAND;AAOD,GARD;;AAUA,sBACE;AAAA,eACGC,KAAK,iBAAI;AAAI,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA,gBAA8BN;AAA9B;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGD,MAAM,GAAG,CAAT,iBACC;AAAI,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA,sCACoBP,MAAM,GAAG,GAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOG,CAACC,KAAD,IAAU,CAACD,MAAX,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCD;;GAAMJ,a;;KAAAA,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { grabStatus } from \"../apiCalls\";\n\nconst PaymentStatus = ({ match }) => {\n  const [values, setValues] = useState({\n    amount: \"\",\n    error: \"\",\n  });\n\n  const { amount, error } = values;\n\n  useEffect(() => {\n    getPaymentStatus(match.params.paymentId);\n  }, []);\n\n  const getPaymentStatus = (paymentId) => {\n    grabStatus(paymentId).then((respsonse) => {\n      if (respsonse.error) {\n        setValues({ ...values, error: respsonse.error, amount: \"\" });\n      } else {\n        setValues({ ...values, error: \"\", amount: respsonse.amount });\n      }\n    });\n  };\n\n  return (\n    <div>\n      {error && <h1 style={{ color: \"red\" }}>{error}</h1>}\n      {amount > 0 && (\n        <h1 style={{ color: \"green\" }}>\n          Your order of rs {amount / 100} is successfull\n        </h1>\n      )}\n      {!error && !amount && <h1>Loading...</h1>}\n    </div>\n  );\n};\n\nexport default PaymentStatus;\n"]},"metadata":{},"sourceType":"module"}